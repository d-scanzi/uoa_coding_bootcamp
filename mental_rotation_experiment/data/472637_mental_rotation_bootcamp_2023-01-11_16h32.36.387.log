1.2969 	WARNING 	We strongly recommend you activate the PTB sound engine in PsychoPy prefs as the preferred audio engine. Its timing is vastly superior. Your prefs are currently set to use ['sounddevice', 'PTB', 'pyo', 'pygame'] (in that order).
3.5329 	EXP 	Created window1 = Window(allowGUI=True, allowStencil=False, autoLog=True, backendConf=UNKNOWN, bitsMode=UNKNOWN, blendMode='avg', bpc=(8, 8, 8), color=array([0, 0, 0]), colorSpace='rgb', depthBits=8, fullscr=<method-wrapper '__getattribute__' of attributeSetter object at 0x00000197A71D7310>, gamma=None, gammaErrorPolicy='raise', lms=UNKNOWN, monitor=<psychopy.monitors.calibTools.Monitor object at 0x00000197A909E790>, multiSample=False, name='window1', numSamples=2, pos=(0, 0), screen=1, size=array([1920, 1080]), stencilBits=0, stereo=False, units='deg', useFBO=True, useRetina=False, viewOri=0.0, viewPos=None, viewScale=None, waitBlanking=True, winType='pyglet')
3.5330 	EXP 	window1: mouseVisible = True
3.5330 	EXP 	window1: mouseVisible = False
3.5330 	EXP 	window1: Attempting to measure frame rate of screen (1) ...
3.5330 	EXP 	window1: recordFrameIntervals = False
3.6993 	EXP 	window1: recordFrameIntervals = True
3.8828 	EXP 	Screen (1) actual frame rate measured at 59.96Hz
3.8828 	EXP 	window1: recordFrameIntervals = False
4.7546 	EXP 	Created intro_slides = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz=method-wrapper(...), alignText='center', alignVert=method-wrapper(...), anchorHoriz='center', anchorVert='center', antialias=True, autoDraw=False, autoLog=True, bold=False, color=array([1, 1, 1]), colorSpace='rgb', contrast=1.0, depth=0.0, flipHoriz=False, flipVert=False, font='Open Sans', fontFiles=[], height=1.5, italic=False, languageStyle='LTR', name='intro_slides', opacity=1.0, ori=0.0, pos=array([0., 0.]), rgb=UNKNOWN, text='', units='deg', win=Window(...), wrapWidth=15.0)
4.7553 	EXP 	Created target = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz=method-wrapper(...), alignText='center', alignVert=method-wrapper(...), anchorHoriz='center', anchorVert='center', antialias=True, autoDraw=False, autoLog=True, bold=False, color=array([1, 1, 1]), colorSpace='rgb', contrast=1.0, depth=-1.0, flipHoriz=False, flipVert=False, font='Open Sans', fontFiles=[], height=3.0, italic=False, languageStyle='LTR', name='target', opacity=1.0, ori=1.0, pos=array([-15.,   0.]), rgb=UNKNOWN, text='', units='deg', win=Window(...), wrapWidth=15.0)
4.8013 	EXP 	Created letter = TextStim(__class__=<class 'psychopy.visual.text.TextStim'>, alignHoriz=method-wrapper(...), alignText='center', alignVert=method-wrapper(...), anchorHoriz='center', anchorVert='center', antialias=True, autoDraw=False, autoLog=True, bold=False, color=array([1, 1, 1]), colorSpace='rgb', contrast=1.0, depth=-2.0, flipHoriz=False, flipVert=False, font='Open Sans', fontFiles=[], height=3.0, italic=False, languageStyle='LTR', name='letter', opacity=1.0, ori=1.0, pos=array([15.,  0.]), rgb=UNKNOWN, text='R', units='deg', win=Window(...), wrapWidth=15.0)
4.8026 	EXP 	Created fixation_cross = ShapeStim(__class__=<class 'psychopy.visual.shape.ShapeStim'>, anchor=('center', 'center'), autoDraw=False, autoLog=True, closeShape=True, color=method-wrapper(...), colorSpace='rgb', contrast=None, depth=-4.0, fillColor=array([ 1, -1, -1]), fillColorSpace='rgb', fillRGB=array([ 1, -1, -1]), interpolate=True, lineColor=array([ 1, -1, -1]), lineColorSpace='rgb', lineRGB=array([ 1, -1, -1]), lineWidth=1.0, name='fixation_cross', opacity=1.0, ori=0.0, pos=array([0., 0.]), size=array([1.5, 1.5]), units='deg', vertices=ndarray(...), win=Window(...), windingRule=None)
4.8045 	EXP 	Imported conditions/intro_slides.csv as conditions, 4 conditions, 1 params
4.8047 	EXP 	Created sequence: sequential, trialTypes=4, nReps=1, seed=None
4.8048 	EXP 	New trial (rep=0, index=0): OrderedDict([('intro_text', 'Welcome to this experiment and thank you for deciding to participate!')])
4.8330 	EXP 	intro_slides: height = 1.5
4.8330 	EXP 	intro_slides: height = 1.5
4.8330 	EXP 	intro_slides: height = 1.5
4.8330 	EXP 	intro_slides: text = 'Welcome to this experiment and thank you for deciding to participate!'
4.8330 	EXP 	intro_slides: autoDraw = True
5.1511 	EXP 	New trial (rep=0, index=1): OrderedDict([('intro_text', 'In this study you will see two letters presented one on the left and the other on the right side of the screen. Your job is to decide whether they are the same letters or not')])
5.1576 	DATA 	Keypress: space
5.1672 	EXP 	intro_slides: autoDraw = False
5.1672 	EXP 	intro_slides: height = 1.5
5.1672 	EXP 	intro_slides: height = 1.5
5.1672 	EXP 	intro_slides: height = 1.5
5.1672 	EXP 	intro_slides: text = 'In this study you will see two letters presented one on the left and the other on the right side of the screen. Your job is to decide whether they are the same letters or not'
5.1672 	EXP 	intro_slides: autoDraw = True
5.3010 	DATA 	Keypress: space
5.3178 	EXP 	New trial (rep=0, index=2): OrderedDict([('intro_text', 'To do this you need to mentally rotate the letter on the left to try to match the one on the right. Sometimes the letters are a mirrored version of each other and they cannot be matched with a simple rotation')])
5.3339 	EXP 	intro_slides: autoDraw = False
5.3339 	EXP 	intro_slides: height = 1.5
5.3339 	EXP 	intro_slides: height = 1.5
5.3339 	EXP 	intro_slides: height = 1.5
5.3339 	EXP 	intro_slides: text = 'To do this you need to mentally rotate the letter on the left to try to match the one on the right. Sometimes the letters are a mirrored version of each other and they cannot be matched with a simple rotation'
5.3339 	EXP 	intro_slides: autoDraw = True
5.4510 	EXP 	New trial (rep=0, index=3): OrderedDict([('intro_text', 'If the letters match (are the same) press the A key. If they do not match (mirrored) press the L key.')])
5.4558 	DATA 	Keypress: space
5.4673 	EXP 	intro_slides: autoDraw = False
5.4673 	EXP 	intro_slides: height = 1.5
5.4673 	EXP 	intro_slides: height = 1.5
5.4673 	EXP 	intro_slides: height = 1.5
5.4673 	EXP 	intro_slides: text = 'If the letters match (are the same) press the A key. If they do not match (mirrored) press the L key.'
5.4673 	EXP 	intro_slides: autoDraw = True
5.8223 	EXP 	Imported conditions/mental_rotation_conditions.csv as conditions, 50 conditions, 5 params
5.8226 	EXP 	Created sequence: random, trialTypes=50, nReps=1, seed=None
5.8227 	EXP 	New trial (rep=0, index=0): OrderedDict([('condition', 'same'), ('target_angle', 120), ('letter_angle', 0), ('flip', 0.0), ('expected_key', 'a')])
5.8293 	DATA 	Keypress: space
5.8506 	EXP 	intro_slides: autoDraw = False
5.8506 	EXP 	target: ori = 120.0
5.8506 	EXP 	target: height = 3.0
5.8506 	EXP 	target: height = 3.0
5.8506 	EXP 	target: height = 3.0
5.8506 	EXP 	target: text = array(['A'], dtype='<U1')
5.8506 	EXP 	letter: ori = 0.0
5.8506 	EXP 	target: autoDraw = True
5.8506 	EXP 	letter: autoDraw = True
5.8506 	EXP 	fixation_cross: autoDraw = True
11.8345 	EXP 	New trial (rep=0, index=1): OrderedDict([('condition', 'same'), ('target_angle', 240), ('letter_angle', 120), ('flip', 0.0), ('expected_key', 'a')])
11.8505 	EXP 	target: autoDraw = False
11.8505 	EXP 	letter: autoDraw = False
11.8505 	EXP 	fixation_cross: autoDraw = False
11.8505 	EXP 	target: autoDraw = False
11.8505 	EXP 	letter: autoDraw = False
11.8505 	EXP 	fixation_cross: autoDraw = False
11.8505 	EXP 	target: ori = 240.0
11.8505 	EXP 	target: height = 3.0
11.8505 	EXP 	target: height = 3.0
11.8505 	EXP 	target: height = 3.0
11.8505 	EXP 	target: text = array(['K'], dtype='<U1')
11.8505 	EXP 	letter: ori = 120.0
11.8505 	EXP 	target: autoDraw = True
11.8505 	EXP 	letter: autoDraw = True
11.8505 	EXP 	fixation_cross: autoDraw = True
12.5181 	DATA 	Keypress: escape
13.2060 	EXP 	window1: mouseVisible = True
